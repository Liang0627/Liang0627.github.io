{"title":"About the first of c++ programming","uid":"74d3955e22ee642a1387ab630b63e268","slug":"test1","date":"2022-03-12T14:46:11.000Z","updated":"2022-03-12T15:13:17.091Z","comments":true,"path":"api/articles/test1.json","keywords":null,"cover":null,"content":"<h2 id=\"关于程序设计第一次T3模测\"><a href=\"#关于程序设计第一次T3模测\" class=\"headerlink\" title=\"关于程序设计第一次T3模测\"></a><strong>关于程序设计第一次T3模测</strong></h2><p><strong>总结一下这一次的T3模测，也是神经大条的睡过头了，多睡了半个小时，上考场刚睡醒，脑子还是懵的</strong></p>\n<p><strong>导致四道题目一题没有写出来，有点羞愧，下面简单的说一下各道题目吧</strong></p>\n<p><strong>1.</strong></p>\n<p><strong>题目描述</strong><br><strong>给定一个矩阵A，其大小为n×m，其中第行列位置的数记为Aj</strong><br><strong>一个位置被称为高点，当且仅当其上下左右四个方向，若对应位置数值存在时，均小于当前位置的值</strong><br><strong>例如，在一个4×3的矩阵内：</strong><br><strong>·若A2.2为高点，则A2.2&gt;A1.2,A2.2&gt;A2.1,A2.2&gt;A3.2,A2.2&gt;A2.3</strong><br><strong>·若A12为高点，则A12&gt;A11,A12&gt;A1.3,A1.2&gt;A2.2</strong><br><strong>·若A4.3为高点，则A4.3&gt;A3.3，A4.3&gt;A42</strong><br><strong>输入格式</strong><br><strong>第一行两个数n.m用空格隔开，分别表示矩阵的行数与列数。</strong><br><strong>接下来n行，每行m个整数，用空格隔开，表示矩阵</strong><br><strong>输出格式</strong><br><strong>输出一个数表示高点的个数</strong><br><strong>数据规模</strong><br><strong>·对于30%的数据，n=1或m=1</strong><br><strong>·对于30%的数据，矩阵中的值只有0或1</strong><br><strong>·对于100%的数据，1&lt;n，m&lt;500，矩阵的值不大于10</strong></p>\n<p><strong>这道题目还是比较简单的，直接暴力就可以做出来，判断四条边界情况和中间方形矩阵情况就可以</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">600</span>][<span class=\"number\">600</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"type\">int</span> n=<span class=\"number\">0</span>,m=<span class=\"number\">0</span>; <span class=\"comment\">//n是行 m是列</span></span><br><span class=\"line\">   cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           cin&gt;&gt;a[i][j];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>&amp;&amp;m==<span class=\"number\">1</span>) cout&lt;&lt;<span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">   <span class=\"type\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j==<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j+<span class=\"number\">1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i+<span class=\"number\">1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;<span class=\"comment\">//a[i][j+1]-a[i][j]&lt;0 右   a[i+1][j]-a[i][j]&lt;0  下</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j==m)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j<span class=\"number\">-1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i+<span class=\"number\">1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;<span class=\"comment\">//a[i][j-1]-a[i][j]&lt;0 左   a[i-1][j]-a[i][j]&lt;0  上</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j+<span class=\"number\">1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i+<span class=\"number\">1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i][j<span class=\"number\">-1</span>]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==n)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j==<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j+<span class=\"number\">1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i<span class=\"number\">-1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j==m)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j<span class=\"number\">-1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i<span class=\"number\">-1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j<span class=\"number\">-1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i<span class=\"number\">-1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i][j+<span class=\"number\">1</span>]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a[i<span class=\"number\">-1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i][j+<span class=\"number\">1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i+<span class=\"number\">1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==m)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a[i][j<span class=\"number\">-1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i<span class=\"number\">-1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i+<span class=\"number\">1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++; <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i][j<span class=\"number\">-1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i<span class=\"number\">-1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i][j+<span class=\"number\">1</span>]-a[i][j]&lt;<span class=\"number\">0</span>&amp;&amp;a[i+<span class=\"number\">1</span>][j]-a[i][j]&lt;<span class=\"number\">0</span>) ans++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout&lt;&lt;ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>2.</strong></p>\n<p><strong>每次打完比赛时候，shy会组织大家玩游戏来放松心情</strong><br><strong>今天要玩的游戏是报数。n个人围成一个圈，顺时针编号为1，2，.，。开始时1号人报1，随后2号人报2，当n号人报n后，下</strong><br><strong>一次报数由1号人报n+1，以此类推</strong><br><strong>特殊的，如果第号人需要报出的数包含7或者是7的倍数，他就应该用拍手取代报数</strong><br><strong>题目描述</strong><br><strong>shy知道有多少个人参与，并且可以决定报数报到m时停止。现在，他想知道每个人拍了多少次手。</strong><br><strong>输入格式</strong><br><strong>第一行输入两个整数n，m，表示有n个人围成一圈，报数报到m停止。</strong><br><strong>输出格式</strong><br><strong>输出一行n个整数，以空格隔开，第个数表示第个人拍手的次数</strong><br><strong>数据规模与子任务</strong><br><strong>对于100%的数据，1&lt;n&lt;50，1&lt;m&lt;6666</strong></p>\n<p><strong>这道题目也是很简单的题，判断一下数的每一位有没有7或者模是否等于0就可以，但是要注意下标的问题，假如刚好n=7，那么存储次数的则会是0下标就不对了</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">10000</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,m;</span><br><span class=\"line\">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">7</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i % n == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                a[n]++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                a[i % n]++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> j = i;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (j != <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j % <span class=\"number\">10</span> == <span class=\"number\">7</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i % n == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        a[n]++;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        a[i % n]++;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                j /= <span class=\"number\">10</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> c=<span class=\"number\">1</span>;c&lt;=n;c++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cout&lt;&lt;a[c]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>3.</strong></p>\n<p><strong>题目背景</strong><br><strong>有一个n×n×n大小的立方体蛋糕被实验室里机饿的同学一人一刀切成了若干个长方体。shy想要吃最大的那块，于是他想知道每切一刀之后最大的蛋糕块体积是多少</strong><br><strong>题目描述</strong><br><strong>假设切蛋糕的刀面，必定与三个坐标轴x,y,z之一垂直</strong><br><strong>现在知道了每一刀切下去的方向和刀面距离原点的距离，你要做的就是帮shy算出每一刀切完之后，最大蛋糕块的体积</strong><br><strong>提示：题日中的蛋糕可以认为是刚体，切割蛋糕不会造成任何损失</strong><br><strong>输入格式</strong><br><strong>第一行输入两个整数n，m。表示蛋糕边长为n，切m刀</strong><br><strong>第二行输入m个字符，以空格隔开。字符只包含x，y，三个字符，第个字符表示第刀的刀面与哪个轴垂直。</strong><br><strong>第三行输入m个整数，以空格隔开。第个整数表示第刀的刀面到原点的距离。</strong><br><strong>输出格式</strong><br><strong>输出m个整数，每个数占一行，第个数表示切了第刀之后最大蛋糕块体积</strong></p>\n<p><strong>这个题就开始有点难了，这里我开始想的和题意不一样，我以为分出一块之后，那一块是不要的，但是其实分出来的蛋糕还要和后面的进行比较，这里是这么做的，记录一下每个轴切的大小，遍历轴开始排序，排序完大，头尾取最大，然后让后一项减前面的，两个比较取最大，后面就简单了</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,m;</span><br><span class=\"line\">    cin&gt;&gt;n&gt;&gt;m; <span class=\"comment\">//n为蛋糕边长 m为切多少刀</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">long</span> <span class=\"type\">long</span>&gt; dir;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">long</span> <span class=\"type\">long</span>&gt; d[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       string s;</span><br><span class=\"line\">       cin&gt;&gt;s;</span><br><span class=\"line\">       dir.<span class=\"built_in\">emplace_back</span>(s[<span class=\"number\">0</span>]-<span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> pos;</span><br><span class=\"line\">        cin &gt;&gt; pos;</span><br><span class=\"line\">        d[dir[i]].<span class=\"built_in\">emplace_back</span>(pos);</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;arr:d) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">sort</span>(arr.<span class=\"built_in\">begin</span>(), arr.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">            <span class=\"type\">long</span> <span class=\"type\">long</span> mx = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!arr.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">                mx = <span class=\"built_in\">max</span>(arr.<span class=\"built_in\">front</span>(), n - arr.<span class=\"built_in\">back</span>());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; arr.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                    mx = <span class=\"built_in\">max</span>(arr[j] - arr[j - <span class=\"number\">1</span>], mx);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mx == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        res *= n;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        res *= mx;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        cout &lt;&lt; res &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>4.</strong></p>\n<p><strong>题目描述</strong><br><strong>shy喜欢仰望星空，并热衷于收集天上的星星。他把星空抽象成一个二维的平面，并制作了一个大小为n×m的地图，经过一段时间</strong><br><strong>的积累，他已经标记了个有星星的位置</strong><br><strong>为了收集星星，他制造了一个机器人，来收集这些星星。开始时，机器人位于地图的左上角，坐标为（1，1）的位置。</strong><br><strong>现在他向机器人发出了t条指令，每条指令的格式为一Dirstep，Dir为一个字符，表示方向，step是一个整数，表示前进的步数</strong><br><strong>Dir只包含四个字符：W.A.S.D</strong><br><strong>·表示向上行动</strong><br><strong>·A表示向左行动</strong><br><strong>·S表示向下行动</strong><br><strong>·D表示向石行动</strong><br><strong>他想知道，机器人执行完所有指令后，能摘到多少星星</strong><br><strong>输入格式</strong><br><strong>第一行，两个数，m用空格隔开，分别表示地图的长与宽。</strong><br><strong>第二行，一个整数表示星星的总个数</strong><br><strong>接下来k行，每行两个数，表示坐标（x,y）处有星星。（1&lt;x&lt;n,1&lt;y&lt;m）</strong><br><strong>接下来1行，一个数表示有峰指令。</strong><br><strong>接下来t行，每行一个字符加一个整数。字符表示方向，整数表示步数</strong><br><strong>注：</strong><br><strong>1.一个相同位置（x,y）可能出现不止一次，但是，此位置只有一个星星</strong><br><strong>2.星星在摘完一次后，就会消失。也就是说，同一个位置经过多次，只有第一次能收集到星星</strong><br><strong>3.保证机器人不会走出地图范围</strong><br><strong>输出格式</strong><br><strong>输出一行，一个数表示收集到的星星个数</strong></p>\n<p><strong>这个题就稍微有点麻烦了，首先搞清楚upper_bound()—是大于这个数的第一个数 lower是大于等于</strong></p>\n<p><strong>这个要用set来进行优化，列出四种情况</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\">set&lt;<span class=\"type\">int</span>&gt; SX[<span class=\"number\">100010</span>]; <span class=\"comment\">//x下所有星星的y坐标</span></span><br><span class=\"line\">set&lt;<span class=\"type\">int</span>&gt; SY[<span class=\"number\">100010</span>]; <span class=\"comment\">//y下所有星星的x坐标</span></span><br><span class=\"line\">set&lt;pair&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&gt; ct; <span class=\"comment\">//记录有多少个星星</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,m,k,t;</span><br><span class=\"line\">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x,y;</span><br><span class=\"line\">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">        ct.<span class=\"built_in\">emplace</span>(x,y);</span><br><span class=\"line\">        SX[x].<span class=\"built_in\">emplace</span>(y);</span><br><span class=\"line\">        SY[y].<span class=\"built_in\">emplace</span>(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    k=(<span class=\"type\">int</span>)ct.<span class=\"built_in\">size</span>(); <span class=\"comment\">//更新k，以免重复计算</span></span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"type\">int</span> PX=<span class=\"number\">1</span>,PY=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>,v;i&lt;=t;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin&gt;&gt;s&gt;&gt;v;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; WillDelete;</span><br><span class=\"line\">        set&lt;<span class=\"type\">int</span>&gt;::iterator it;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            it=SX[PX].<span class=\"built_in\">upper_bound</span>(PY);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;it!=SX[PX].<span class=\"built_in\">begin</span>();)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                --it;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(*it&lt;PY-v) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                ct.<span class=\"built_in\">erase</span>(&#123;PX,*it&#125;);</span><br><span class=\"line\">                WillDelete.<span class=\"built_in\">emplace_back</span>(*it);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> &amp;x:WillDelete) SX[PX].<span class=\"built_in\">erase</span>(x);</span><br><span class=\"line\">            PY-=v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;W&#x27;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            it=SY[PY].<span class=\"built_in\">upper_bound</span>(PX);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;it!=SY[PY].<span class=\"built_in\">begin</span>();)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                --it;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(*it&lt;PX-v) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                ct.<span class=\"built_in\">erase</span>(&#123;*it,PY&#125;);</span><br><span class=\"line\">                WillDelete.<span class=\"built_in\">emplace_back</span>(*it);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> x:WillDelete) SY[PY].<span class=\"built_in\">erase</span>(x);</span><br><span class=\"line\">            PX-=v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            it=SX[PX].<span class=\"built_in\">lower_bound</span>(PY);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;it!=SX[PX].<span class=\"built_in\">end</span>();++it)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(*it&gt;PY+v) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                ct.<span class=\"built_in\">erase</span>(&#123;PX,*it&#125;);</span><br><span class=\"line\">                WillDelete.<span class=\"built_in\">emplace_back</span>(*it);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> &amp;x:WillDelete) SX[PX].<span class=\"built_in\">erase</span>(x);</span><br><span class=\"line\">            PY+=v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;S&#x27;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            it=SY[PY].<span class=\"built_in\">lower_bound</span>(PX);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;it!=SY[PY].<span class=\"built_in\">end</span>();++it)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(*it&gt;PX+v) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                ct.<span class=\"built_in\">erase</span>(&#123;*it,PY&#125;);</span><br><span class=\"line\">                WillDelete.<span class=\"built_in\">emplace_back</span>(*it);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> x:WillDelete) SY[PY].<span class=\"built_in\">erase</span>(x);</span><br><span class=\"line\">            PX+=v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout&lt;&lt;k-ct.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","feature":true,"text":"关于程序设计第一次T3模测总结一下这一次的T3模测，也是神经大条的睡过头了，多睡了半个小时，上考场刚睡醒，脑子还是懵的 导致四道题目一题没有写出来，有点羞愧，下面简单的说一下各道题目吧 1. 题目描述给定一个矩阵A，其大小为n×m，其中第行列位置的数记为Aj一个位置被称为高点，当...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"c++","slug":"c","count":1,"path":"api/tags/c.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%AC%E4%B8%80%E6%AC%A1T3%E6%A8%A1%E6%B5%8B\"><span class=\"toc-text\">关于程序设计第一次T3模测</span></a></li></ol>","author":{"name":"huihui","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"SDU的一名菜鸟学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Binding of personal blog and domain name","uid":"51bc8a4ff9e7070b0265359ab8c6cb9f","slug":"bangdingyuming","date":"2022-03-12T15:14:32.000Z","updated":"2022-03-12T15:26:15.226Z","comments":true,"path":"api/articles/bangdingyuming.json","keywords":null,"cover":null,"text":"关于个人博客与域名的绑定最近在完成hexo+github的个人博客后，总感觉github.io的域名有够难听的 所以计划了一下更改一下域名 除了域名经过这两天的测试我发现，博客中的内容都是经国外的CDN的，导致进博客的时候需要 40-50s甚至1分多钟，所以我就顺便加速一下博客，...","link":"","photos":[],"count_time":{"symbolsCount":461,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"hexo","slug":"hexo","count":2,"path":"api/tags/hexo.json"}],"author":{"name":"huihui","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"SDU的一名菜鸟学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"First homework of cloud computing","uid":"5286650468b52ad05200c33f50f2a04a","slug":"homework","date":"2022-03-09T12:41:31.000Z","updated":"2022-03-09T13:00:42.358Z","comments":true,"path":"api/articles/homework.json","keywords":null,"cover":null,"text":"第一次云计算作业 云使能技术主要包括哪些技术组件？简要说明其关键特性 12345678数据中心技术：一种特殊的IT基础设施，用于集中放置IT资源；虚拟化技术：是将物理IT资源转换为虚拟IT资源的过程，虚拟服务器使用自己的客户操作系统，独立于创建虚拟服务器的操作系统，在虚拟服务器上...","link":"","photos":[],"count_time":{"symbolsCount":591,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"cloud computing","slug":"cloud-computing","count":2,"path":"api/tags/cloud-computing.json"}],"author":{"name":"huihui","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"SDU的一名菜鸟学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}